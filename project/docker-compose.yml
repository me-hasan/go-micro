version: '3' 

services: 

  broker-service: 
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile 
    restart: always  
    ports: 
      - "8087:80" 
    deploy:
      mode: replicated
      replicas: 1 


  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8086:80"
    deploy:
      mode: replicated
      replicas: 1    
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=authdb sslmode=disable timezone=UTC connect_timeout=5"


  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: "localhost"
      MAIL_HOST: "mailhog"
      MAIL_PORT: "1025"
      MAIL_ENCRYPTION: "none"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROM_ADDRESS: "khayrul@example.com"
      MAIL_FROM_NAME: "Khayrul Hasan"   


  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1    


  postgres: 
    image: 'postgres:alpine' 
    ports: 
      - "5432:5432" 
    restart: always
    deploy:
      mode: replicated
      replicas: 1  
    environment: 
      - POSTGRES_USER=postgres 
      - POSTGRES_PASSWORD=password 
      - POSTGRES_DB=authdb 

    volumes: 
      - ./database/postgres:/var/lib/postgresql/data  


  mongo:
    image: 'mongo:4.2.16-bionic'
    ports: 
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=logs
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password 
    volumes:
      - ./database/mongo:/data/db  


  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025" 



  rabbitmq:    
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1 
    volumes:
      - ./database/rabbitmq:/var/lib/rabbitmq

